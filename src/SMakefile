#
#	SMakefile for ma.lib - C99 Math Library Extensions for Amiga and SAS/C
#
#	Copyright (c) 2025 amigazen project
#	All rights reserved.
#

DEST = /SDK/lib/

RM = delete QUIET
CP = copy CLONE QUIET
CC = sc
CXX = sc
AR = oml
AS = asm

# Math function objects - C99/POSIX extensions
MATH_OBJS = \
	acosh.o asinh.o atanh.o \
	expm1.o log1p.o \
	rint.o \
	hypot.o \
	matherr.o \
	ldexp.o frexp.o cbrt.o \
	finite.o isnan.o isinf.o copysign.o \
	nextafter.o scalbn.o logb.o ilogb.o \
	fabs.o fmod.o modf.o remainder.o ceil.o floor.o \
	erf.o erfc.o gamma.o lgamma.o gamma_r.o lgamma_r.o \
	j0.o j1.o sin.o cos.o tan.o atan.o atan2.o \
	log.o log10.o sqrt.o pow.o exp.o \
	cosh.o sinh.o tanh.o asin.o acos.o \
	signgam.o lib_version.o

# Complex number function objects (C++ compiled)
COMPLEX_OBJS = \
	cabs.o carg.o conj.o \
	cadd.o csub.o cmul.o cdiv.o \
	ccos.o csin.o ctan.o \
	ccosh.o csinh.o ctanh.o \
	cacos.o casin.o catan.o \
	cacosh.o casinh.o catanh.o \
	cexp.o clog.o cpow.o csqrt.o \
	cmod.o cneg.o cscale.o cproj.o \
	creal.o cimag.o

# Float variants (f suffix)
FLOAT_OBJS = \
	acoshf.o asinhf.o atanhf.o \
	log1pf.o \
	finitef.o isnanf.o isinff.o copysignf.o \
	nextafterf.o scalbnf.o logbf.o ilogbf.o

# Long double variants (l suffix)  
LONGDOUBLE_OBJS = \
	acoshl.o asinhl.o atanhl.o \
	log1pl.o \
	finitel.o isnanl.o isinfl.o copysignl.o \
	nextafterl.o scalbnl.o logbl.o ilogbl.o

# Complex float variants (not implemented yet)
COMPLEXF_OBJS = 

# Complex long double variants (not implemented yet)
COMPLEXL_OBJS = 

# Amiga math library integration objects
AMIGA_MATH_OBJS = 
#	amiga_math_init.o amiga_math_cleanup.o \
#	amiga_math_ffp.o amiga_math_ieee.o amiga_math_trans.o

# All objects combined
ALL_OBJS = $(MATH_OBJS) $(COMPLEX_OBJS) $(FLOAT_OBJS) $(LONGDOUBLE_OBJS) \
	$(COMPLEXF_OBJS) $(COMPLEXL_OBJS) $(AMIGA_MATH_OBJS)

# Debug objects - need to list each one individually
DOBJS = acosh.do asinh.do atanh.do \
	expm1.do log1p.do rint.do hypot.do matherr.do \
	ldexp.do frexp.do cbrt.do \
	finite.do isnan.do isinf.do copysign.do \
	nextafter.do scalbn.do logb.do ilogb.do \
	fabs.do fmod.do modf.do remainder.do ceil.do floor.do \
	erf.do erfc.do gamma.do lgamma.do gamma_r.do lgamma_r.do \
	j0.do j1.do sin.do cos.do tan.do atan.do atan2.do \
	log.do log10.do sqrt.do pow.do exp.do \
	cosh.do sinh.do tanh.do asin.do acos.do signgam.do lib_version.do \
	cabs.do carg.do conj.do \
	cadd.do csub.do cmul.do cdiv.do \
	ccos.do csin.do ctan.do \
	ccosh.do csinh.do ctanh.do \
	cacos.do casin.do catan.do \
	cacosh.do casinh.do catanh.do \
	cexp.do clog.do cpow.do csqrt.do \
	cmod.do cneg.do cscale.do cproj.do \
	creal.do cimag.do \
	acoshf.do asinhf.do atanhf.do log1pf.do \
	finitef.do isnanf.do isinff.do copysignf.do \
	nextafterf.do scalbnf.do logbf.do ilogbf.do \
	acoshl.do asinhl.do atanhl.do log1pl.do \
	finitel.do isnanl.do isinfl.do copysignl.do \
	nextafterl.do scalbnl.do logbl.do ilogbl.do

NBOBJS = acosh.nbo asinh.nbo atanh.nbo expm1.nbo log1p.nbo rint.nbo hypot.nbo matherr.nbo \
	ldexp.nbo frexp.nbo cbrt.nbo \
	cabs.nbo carg.nbo conj.nbo \
	cadd.nbo csub.nbo cmul.nbo cdiv.nbo \
	ccos.nbo csin.nbo ctan.nbo \
	ccosh.nbo csinh.nbo ctanh.nbo \
	cacos.nbo casin.nbo catan.nbo \
	cacosh.nbo casinh.nbo catanh.nbo \
	cexp.nbo clog.nbo cpow.nbo csqrt.nbo \
	cmod.nbo cneg.nbo cscale.nbo cproj.nbo \
	creal.nbo cimag.nbo \
	acoshf.nbo asinhf.nbo atanhf.nbo log1pf.nbo \
	acoshl.nbo asinhl.nbo atanhl.nbo log1pl.nbo

DNBOBJS = acosh.dnbo asinh.dnbo atanh.dnbo expm1.dnbo log1p.dnbo rint.dnbo hypot.dnbo matherr.dnbo \
	ldexp.dnbo frexp.dnbo cbrt.dnbo \
	cabs.dnbo carg.dnbo conj.dnbo \
	cadd.dnbo csub.dnbo cmul.dnbo cdiv.dnbo \
	ccos.dnbo csin.dnbo ctan.dnbo \
	ccosh.dnbo csinh.dnbo ctanh.dnbo \
	cacos.dnbo casin.dnbo catan.dnbo \
	cacosh.dnbo casinh.dnbo catanh.dnbo \
	cexp.dnbo clog.dnbo cpow.dnbo csqrt.dnbo \
	cmod.dnbo cneg.dnbo cscale.dnbo cproj.dnbo \
	creal.dnbo cimag.dnbo \
	acoshf.dnbo asinhf.dnbo atanhf.dnbo log1pf.dnbo \
	acoshl.dnbo asinhl.dnbo atanhl.dnbo log1pl.dnbo

DEFS = DEF __USE_SYSBASE=1

IDIRS = IDIR=include IDIR=include/internal IDIR=include: IDIR=netinclude: 

SCOPTIONS = NOVER NOICONS CPU=ANY PARMS=BOTH NOSTKCHK IDLEN=100 \
	    AFP MCCONS STREQ UTILLIB MATH=IEEE OPTTIME OPTSCHED \
	    $(DEFS) $(IDIRS) IGNORE=74,92,101,104,306,315,316,317

OFLAGS = OPTIMIZE
DFLAGS = NOOPTIMIZE DEBUG=SF

CFLAGS =    DATA=NEAR $(IDIRS)
CFLAGS_NB = DATA=FAR $(IDIRS)

# Library targets
LIBRARIES = ma.lib ma040.lib ma881.lib maffp.lib maieee.lib
DEBUG_LIBRARIES = mad.lib ma040d.lib ma881d.lib maffpd.lib maieeed.lib
NB_LIBRARIES = manb.lib ma040nb.lib ma881nb.lib maffpnb.lib maieeenb.lib
NBD_LIBRARIES = manbd.lib ma040nbd.lib ma881nbd.lib maffpnbd.lib maieeenbd.lib

# Default target
all: $(LIBRARIES) $(DEBUG_LIBRARIES) $(NB_LIBRARIES) $(NBD_LIBRARIES)

# Standard library
ma.lib: $(ALL_OBJS)
	-$(RM) ma.lib ram:ma.lib
	$(AR) ram:ma.lib r <@<
$(ALL_OBJS)
<
	$(CP) ram:ma.lib ""
	$(RM) ram:ma.lib

mad.lib: $(DOBJS)
	-$(RM) mad.lib ram:mad.lib
	$(AR) ram:mad.lib r <@<
$(DOBJS)
<
	$(CP) ram:mad.lib ""
	$(RM) ram:mad.lib

manb.lib: $(NBOBJS)
	-$(RM) manb.lib ram:manb.lib
	$(AR) ram:manb.lib r <@<
$(NBOBJS)
<
	$(CP) ram:manb.lib ""
	$(RM) ram:manb.lib

manbd.lib: $(DNBOBJS)
	-$(RM) manbd.lib ram:manbd.lib
	$(AR) ram:manbd.lib r <@<
$(DNBOBJS)
<
	$(CP) ram:manbd.lib ""
	$(RM) ram:manbd.lib

# 68040 optimized library
ma040.lib: $(ALL_OBJS)
	-$(RM) ma040.lib ram:ma040.lib
	$(AR) ram:ma040.lib r <@<
$(ALL_OBJS)
<
	$(CP) ram:ma040.lib ""
	$(RM) ram:ma040.lib

ma040d.lib: $(DOBJS)
	-$(RM) ma040d.lib ram:ma040d.lib
	$(AR) ram:ma040d.lib r <@<
$(DOBJS)
<
	$(CP) ram:ma040d.lib ""
	$(RM) ram:ma040d.lib

ma040nb.lib: $(NBOBJS)
	-$(RM) ma040nb.lib ram:ma040nb.lib
	$(AR) ram:ma040nb.lib r <@<
$(NBOBJS)
<
	$(CP) ram:ma040nb.lib ""
	$(RM) ram:ma040nb.lib

ma040nbd.lib: $(DNBOBJS)
	-$(RM) ma040nbd.lib ram:ma040nbd.lib
	$(AR) ram:ma040nbd.lib r <@<
$(DNBOBJS)
<
	$(CP) ram:ma040nbd.lib ""
	$(RM) ram:ma040nbd.lib

# 68881 FPU library
ma881.lib: $(ALL_OBJS)
	-$(RM) ma881.lib ram:ma881.lib
	$(AR) ram:ma881.lib r <@<
$(ALL_OBJS)
<
	$(CP) ram:ma881.lib ""
	$(RM) ram:ma881.lib

ma881d.lib: $(DOBJS)
	-$(RM) ma881d.lib ram:ma881d.lib
	$(AR) ram:ma881d.lib r <@<
$(DOBJS)
<
	$(CP) ram:ma881d.lib ""
	$(RM) ram:ma881d.lib

ma881nb.lib: $(NBOBJS)
	-$(RM) ma881nb.lib ram:ma881nb.lib
	$(AR) ram:ma881nb.lib r <@<
$(NBOBJS)
<
	$(CP) ram:ma881nb.lib ""
	$(RM) ram:ma881nb.lib

ma881nbd.lib: $(DNBOBJS)
	-$(RM) ma881nbd.lib ram:ma881nbd.lib
	$(AR) ram:ma881nbd.lib r <@<
$(DNBOBJS)
<
	$(CP) ram:ma881nbd.lib ""
	$(RM) ram:ma881nbd.lib

# FFP math library
maffp.lib: $(ALL_OBJS)
	-$(RM) maffp.lib ram:maffp.lib
	$(AR) ram:maffp.lib r <@<
$(ALL_OBJS)
<
	$(CP) ram:maffp.lib ""
	$(RM) ram:maffp.lib

maffpd.lib: $(DOBJS)
	-$(RM) maffpd.lib ram:maffpd.lib
	$(AR) ram:maffpd.lib r <@<
$(DOBJS)
<
	$(CP) ram:maffpd.lib ""
	$(RM) ram:maffpd.lib

maffpnb.lib: $(NBOBJS)
	-$(RM) maffpnb.lib ram:maffpnb.lib
	$(AR) ram:maffpnb.lib r <@<
$(NBOBJS)
<
	$(CP) ram:maffpnb.lib ""
	$(RM) ram:maffpnb.lib

maffpnbd.lib: $(DNBOBJS)
	-$(RM) maffpnbd.lib ram:maffpnbd.lib
	$(AR) ram:maffpnbd.lib r <@<
$(DNBOBJS)
<
	$(CP) ram:maffpnbd.lib ""
	$(RM) ram:maffpnbd.lib

# IEEE math library
maieee.lib: $(ALL_OBJS)
	-$(RM) maieee.lib ram:maieee.lib
	$(AR) ram:maieee.lib r <@<
$(ALL_OBJS)
<
	$(CP) ram:maieee.lib ""
	$(RM) ram:maieee.lib

maieeed.lib: $(DOBJS)
	-$(RM) maieeed.lib ram:maieeed.lib
	$(AR) ram:maieeed.lib r <@<
$(DOBJS)
<
	$(CP) ram:maieeed.lib ""
	$(RM) ram:maieeed.lib

maieeenb.lib: $(NBOBJS)
	-$(RM) maieeenb.lib ram:maieeenb.lib
	$(AR) ram:maieeenb.lib r <@<
$(NBOBJS)
<
	$(CP) ram:maieeenb.lib ""
	$(RM) ram:maieeenb.lib

maieeenbd.lib: $(DNBOBJS)
	-$(RM) maieeenbd.lib ram:maieeenbd.lib
	$(AR) ram:maieeenbd.lib r <@<
$(DNBOBJS)
<
	$(CP) ram:maieeenbd.lib ""
	$(RM) ram:maieeenbd.lib

# Compilation rules
.c.o:
	$(CC) $(CFLAGS) $(OFLAGS) $*.c
.c.do:
	$(CC) $(CFLAGS) $(DFLAGS) $*.c OBJNAME=$*.do
.c.nbo:
	$(CC) $(CFLAGS_NB) $(OFLAGS) $*.c OBJNAME=$*.nbo
.c.dnbo:
	$(CC) $(CFLAGS_NB) $(DFLAGS) $*.c OBJNAME=$*.dnbo

# Explicit targets for C++ complex functions
cabs.o: cabs.cpp
	$(CXX) $(CFLAGS) $(OFLAGS) cabs.cpp
carg.o: carg.cpp
	$(CXX) $(CFLAGS) $(OFLAGS) carg.cpp
conj.o: conj.cpp
	$(CXX) $(CFLAGS) $(OFLAGS) conj.cpp
cadd.o: cadd.cpp
	$(CXX) $(CFLAGS) $(OFLAGS) cadd.cpp
csub.o: csub.cpp
	$(CXX) $(CFLAGS) $(OFLAGS) csub.cpp
cmul.o: cmul.cpp
	$(CXX) $(CFLAGS) $(OFLAGS) cmul.cpp
cdiv.o: cdiv.cpp
	$(CXX) $(CFLAGS) $(OFLAGS) cdiv.cpp
ccos.o: ccos.cpp
	$(CXX) $(CFLAGS) $(OFLAGS) ccos.cpp
csin.o: csin.cpp
	$(CXX) $(CFLAGS) $(OFLAGS) csin.cpp
ccosh.o: ccosh.cpp
	$(CXX) $(CFLAGS) $(OFLAGS) ccosh.cpp
csinh.o: csinh.cpp
	$(CXX) $(CFLAGS) $(OFLAGS) csinh.cpp
cexp.o: cexp.cpp
	$(CXX) $(CFLAGS) $(OFLAGS) cexp.cpp
clog.o: clog.cpp
	$(CXX) $(CFLAGS) $(OFLAGS) clog.cpp
cpow.o: cpow.cpp
	$(CXX) $(CFLAGS) $(OFLAGS) cpow.cpp
csqrt.o: csqrt.cpp
	$(CXX) $(CFLAGS) $(OFLAGS) csqrt.cpp
cmod.o: cmod.cpp
	$(CXX) $(CFLAGS) $(OFLAGS) cmod.cpp
cneg.o: cneg.cpp
	$(CXX) $(CFLAGS) $(OFLAGS) cneg.cpp
cscale.o: cscale.cpp
	$(CXX) $(CFLAGS) $(OFLAGS) cscale.cpp
cproj.o: cproj.cpp
	$(CXX) $(CFLAGS) $(OFLAGS) cproj.cpp
creal.o: creal.c
	$(CC) $(CFLAGS) $(OFLAGS) creal.c
cimag.o: cimag.c
	$(CC) $(CFLAGS) $(OFLAGS) cimag.c
ctan.o: ctan.cpp
	$(CXX) $(CFLAGS) $(OFLAGS) ctan.cpp
ctanh.o: ctanh.cpp
	$(CXX) $(CFLAGS) $(OFLAGS) ctanh.cpp
cacos.o: cacos.cpp
	$(CXX) $(CFLAGS) $(OFLAGS) cacos.cpp
casin.o: casin.cpp
	$(CXX) $(CFLAGS) $(OFLAGS) casin.cpp
catan.o: catan.cpp
	$(CXX) $(CFLAGS) $(OFLAGS) catan.cpp
cacosh.o: cacosh.cpp
	$(CXX) $(CFLAGS) $(OFLAGS) cacosh.cpp
casinh.o: casinh.cpp
	$(CXX) $(CFLAGS) $(OFLAGS) casinh.cpp
catanh.o: catanh.cpp
	$(CXX) $(CFLAGS) $(OFLAGS) catanh.cpp

# Debug targets for C++ complex functions
cabs.do: cabs.cpp
	$(CXX) $(CFLAGS) $(DFLAGS) cabs.cpp OBJNAME=cabs.do
carg.do: carg.cpp
	$(CXX) $(CFLAGS) $(DFLAGS) carg.cpp OBJNAME=carg.do
conj.do: conj.cpp
	$(CXX) $(CFLAGS) $(DFLAGS) conj.cpp OBJNAME=conj.do
cadd.do: cadd.cpp
	$(CXX) $(CFLAGS) $(DFLAGS) cadd.cpp OBJNAME=cadd.do
csub.do: csub.cpp
	$(CXX) $(CFLAGS) $(DFLAGS) csub.cpp OBJNAME=csub.do
cmul.do: cmul.cpp
	$(CXX) $(CFLAGS) $(DFLAGS) cmul.cpp OBJNAME=cmul.do
cdiv.do: cdiv.cpp
	$(CXX) $(CFLAGS) $(DFLAGS) cdiv.cpp OBJNAME=cdiv.do
ccos.do: ccos.cpp
	$(CXX) $(CFLAGS) $(DFLAGS) ccos.cpp OBJNAME=ccos.do
csin.do: csin.cpp
	$(CXX) $(CFLAGS) $(DFLAGS) csin.cpp OBJNAME=csin.do
ccosh.do: ccosh.cpp
	$(CXX) $(CFLAGS) $(DFLAGS) ccosh.cpp OBJNAME=ccosh.do
csinh.do: csinh.cpp
	$(CXX) $(CFLAGS) $(DFLAGS) csinh.cpp OBJNAME=csinh.do
cexp.do: cexp.cpp
	$(CXX) $(CFLAGS) $(DFLAGS) cexp.cpp OBJNAME=cexp.do
clog.do: clog.cpp
	$(CXX) $(CFLAGS) $(DFLAGS) clog.cpp OBJNAME=clog.do
cpow.do: cpow.cpp
	$(CXX) $(CFLAGS) $(DFLAGS) cpow.cpp OBJNAME=cpow.do
csqrt.do: csqrt.cpp
	$(CXX) $(CFLAGS) $(DFLAGS) csqrt.cpp OBJNAME=csqrt.do
cmod.do: cmod.cpp
	$(CXX) $(CFLAGS) $(DFLAGS) cmod.cpp OBJNAME=cmod.do
cneg.do: cneg.cpp
	$(CXX) $(CFLAGS) $(DFLAGS) cneg.cpp OBJNAME=cneg.do
cscale.do: cscale.cpp
	$(CXX) $(CFLAGS) $(DFLAGS) cscale.cpp OBJNAME=cscale.do
cproj.do: cproj.cpp
	$(CXX) $(CFLAGS) $(DFLAGS) cproj.cpp OBJNAME=cproj.do
creal.do: creal.c
	$(CC) $(CFLAGS) $(DFLAGS) creal.c OBJNAME=creal.do
cimag.do: cimag.c
	$(CC) $(CFLAGS) $(DFLAGS) cimag.c OBJNAME=cimag.do
ctan.do: ctan.cpp
	$(CXX) $(CFLAGS) $(DFLAGS) ctan.cpp OBJNAME=ctan.do
ctanh.do: ctanh.cpp
	$(CXX) $(CFLAGS) $(DFLAGS) ctanh.cpp OBJNAME=ctanh.do
cacos.do: cacos.cpp
	$(CXX) $(CFLAGS) $(DFLAGS) cacos.cpp OBJNAME=cacos.do
casin.do: casin.cpp
	$(CXX) $(CFLAGS) $(DFLAGS) casin.cpp OBJNAME=casin.do
catan.do: catan.cpp
	$(CXX) $(CFLAGS) $(DFLAGS) catan.cpp OBJNAME=catan.do
cacosh.do: cacosh.cpp
	$(CXX) $(CFLAGS) $(DFLAGS) cacosh.cpp OBJNAME=cacosh.do
casinh.do: casinh.cpp
	$(CXX) $(CFLAGS) $(DFLAGS) casinh.cpp OBJNAME=casinh.do
catanh.do: catanh.cpp
	$(CXX) $(CFLAGS) $(DFLAGS) catanh.cpp OBJNAME=catanh.do

# NBO targets for C++ complex functions
cabs.nbo: cabs.cpp
	$(CXX) $(CFLAGS_NB) $(OFLAGS) cabs.cpp OBJNAME=cabs.nbo
carg.nbo: carg.cpp
	$(CXX) $(CFLAGS_NB) $(OFLAGS) carg.cpp OBJNAME=carg.nbo
conj.nbo: conj.cpp
	$(CXX) $(CFLAGS_NB) $(OFLAGS) conj.cpp OBJNAME=conj.nbo
cadd.nbo: cadd.cpp
	$(CXX) $(CFLAGS_NB) $(OFLAGS) cadd.cpp OBJNAME=cadd.nbo
csub.nbo: csub.cpp
	$(CXX) $(CFLAGS_NB) $(OFLAGS) csub.cpp OBJNAME=csub.nbo
cmul.nbo: cmul.cpp
	$(CXX) $(CFLAGS_NB) $(OFLAGS) cmul.cpp OBJNAME=cmul.nbo
cdiv.nbo: cdiv.cpp
	$(CXX) $(CFLAGS_NB) $(OFLAGS) cdiv.cpp OBJNAME=cdiv.nbo
ccos.nbo: ccos.cpp
	$(CXX) $(CFLAGS_NB) $(OFLAGS) ccos.cpp OBJNAME=ccos.nbo
csin.nbo: csin.cpp
	$(CXX) $(CFLAGS_NB) $(OFLAGS) csin.cpp OBJNAME=csin.nbo
ccosh.nbo: ccosh.cpp
	$(CXX) $(CFLAGS_NB) $(OFLAGS) ccosh.cpp OBJNAME=ccosh.nbo
csinh.nbo: csinh.cpp
	$(CXX) $(CFLAGS_NB) $(OFLAGS) csinh.cpp OBJNAME=csinh.nbo
cexp.nbo: cexp.cpp
	$(CXX) $(CFLAGS_NB) $(OFLAGS) cexp.cpp OBJNAME=cexp.nbo
clog.nbo: clog.cpp
	$(CXX) $(CFLAGS_NB) $(OFLAGS) clog.cpp OBJNAME=clog.nbo
cpow.nbo: cpow.cpp
	$(CXX) $(CFLAGS_NB) $(OFLAGS) cpow.cpp OBJNAME=cpow.nbo
csqrt.nbo: csqrt.cpp
	$(CXX) $(CFLAGS_NB) $(OFLAGS) csqrt.cpp OBJNAME=csqrt.nbo
cmod.nbo: cmod.cpp
	$(CXX) $(CFLAGS_NB) $(OFLAGS) cmod.cpp OBJNAME=cmod.nbo
cneg.nbo: cneg.cpp
	$(CXX) $(CFLAGS_NB) $(OFLAGS) cneg.cpp OBJNAME=cneg.nbo
cscale.nbo: cscale.cpp
	$(CXX) $(CFLAGS_NB) $(OFLAGS) cscale.cpp OBJNAME=cscale.nbo
cproj.nbo: cproj.cpp
	$(CXX) $(CFLAGS_NB) $(OFLAGS) cproj.cpp OBJNAME=cproj.nbo
creal.nbo: creal.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) creal.c OBJNAME=creal.nbo
cimag.nbo: cimag.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) cimag.c OBJNAME=cimag.nbo
ctan.nbo: ctan.cpp
	$(CXX) $(CFLAGS_NB) $(OFLAGS) ctan.cpp OBJNAME=ctan.nbo
ctanh.nbo: ctanh.cpp
	$(CXX) $(CFLAGS_NB) $(OFLAGS) ctanh.cpp OBJNAME=ctanh.nbo
cacos.nbo: cacos.cpp
	$(CXX) $(CFLAGS_NB) $(OFLAGS) cacos.cpp OBJNAME=cacos.nbo
casin.nbo: casin.cpp
	$(CXX) $(CFLAGS_NB) $(OFLAGS) casin.cpp OBJNAME=casin.nbo
catan.nbo: catan.cpp
	$(CXX) $(CFLAGS_NB) $(OFLAGS) catan.cpp OBJNAME=catan.nbo
cacosh.nbo: cacosh.cpp
	$(CXX) $(CFLAGS_NB) $(OFLAGS) cacosh.cpp OBJNAME=cacosh.nbo
casinh.nbo: casinh.cpp
	$(CXX) $(CFLAGS_NB) $(OFLAGS) casinh.cpp OBJNAME=casinh.nbo
catanh.nbo: catanh.cpp
	$(CXX) $(CFLAGS_NB) $(OFLAGS) catanh.cpp OBJNAME=catanh.nbo

# DNBO targets for C++ complex functions
cabs.dnbo: cabs.cpp
	$(CXX) $(CFLAGS_NB) $(DFLAGS) cabs.cpp OBJNAME=cabs.dnbo
carg.dnbo: carg.cpp
	$(CXX) $(CFLAGS_NB) $(DFLAGS) carg.cpp OBJNAME=carg.dnbo
conj.dnbo: conj.cpp
	$(CXX) $(CFLAGS_NB) $(DFLAGS) conj.cpp OBJNAME=conj.dnbo
cadd.dnbo: cadd.cpp
	$(CXX) $(CFLAGS_NB) $(DFLAGS) cadd.cpp OBJNAME=cadd.dnbo
csub.dnbo: csub.cpp
	$(CXX) $(CFLAGS_NB) $(DFLAGS) csub.cpp OBJNAME=csub.dnbo
cmul.dnbo: cmul.cpp
	$(CXX) $(CFLAGS_NB) $(DFLAGS) cmul.cpp OBJNAME=cmul.dnbo
cdiv.dnbo: cdiv.cpp
	$(CXX) $(CFLAGS_NB) $(DFLAGS) cdiv.cpp OBJNAME=cdiv.dnbo
ccos.dnbo: ccos.cpp
	$(CXX) $(CFLAGS_NB) $(DFLAGS) ccos.cpp OBJNAME=ccos.dnbo
csin.dnbo: csin.cpp
	$(CXX) $(CFLAGS_NB) $(DFLAGS) csin.cpp OBJNAME=csin.dnbo
ccosh.dnbo: ccosh.cpp
	$(CXX) $(CFLAGS_NB) $(DFLAGS) ccosh.cpp OBJNAME=ccosh.dnbo
csinh.dnbo: csinh.cpp
	$(CXX) $(CFLAGS_NB) $(DFLAGS) csinh.cpp OBJNAME=csinh.dnbo
cexp.dnbo: cexp.cpp
	$(CXX) $(CFLAGS_NB) $(DFLAGS) cexp.cpp OBJNAME=cexp.dnbo
clog.dnbo: clog.cpp
	$(CXX) $(CFLAGS_NB) $(DFLAGS) clog.cpp OBJNAME=clog.dnbo
cpow.dnbo: cpow.cpp
	$(CXX) $(CFLAGS_NB) $(DFLAGS) cpow.cpp OBJNAME=cpow.dnbo
csqrt.dnbo: csqrt.cpp
	$(CXX) $(CFLAGS_NB) $(DFLAGS) csqrt.cpp OBJNAME=csqrt.dnbo
cmod.dnbo: cmod.cpp
	$(CXX) $(CFLAGS_NB) $(DFLAGS) cmod.cpp OBJNAME=cmod.dnbo
cneg.dnbo: cneg.cpp
	$(CXX) $(CFLAGS_NB) $(DFLAGS) cneg.cpp OBJNAME=cneg.dnbo
cscale.dnbo: cscale.cpp
	$(CXX) $(CFLAGS_NB) $(DFLAGS) cscale.cpp OBJNAME=cscale.dnbo
cproj.dnbo: cproj.cpp
	$(CXX) $(CFLAGS_NB) $(DFLAGS) cproj.cpp OBJNAME=cproj.dnbo
creal.dnbo: creal.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) creal.c OBJNAME=creal.dnbo
cimag.dnbo: cimag.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) cimag.c OBJNAME=cimag.dnbo
ctan.dnbo: ctan.cpp
	$(CXX) $(CFLAGS_NB) $(DFLAGS) ctan.cpp OBJNAME=ctan.dnbo
ctanh.dnbo: ctanh.cpp
	$(CXX) $(CFLAGS_NB) $(DFLAGS) ctanh.cpp OBJNAME=ctanh.dnbo
cacos.dnbo: cacos.cpp
	$(CXX) $(CFLAGS_NB) $(DFLAGS) cacos.cpp OBJNAME=cacos.dnbo
casin.dnbo: casin.cpp
	$(CXX) $(CFLAGS_NB) $(DFLAGS) casin.cpp OBJNAME=casin.dnbo
catan.dnbo: catan.cpp
	$(CXX) $(CFLAGS_NB) $(DFLAGS) catan.cpp OBJNAME=catan.dnbo
cacosh.dnbo: cacosh.cpp
	$(CXX) $(CFLAGS_NB) $(DFLAGS) cacosh.cpp OBJNAME=cacosh.dnbo
casinh.dnbo: casinh.cpp
	$(CXX) $(CFLAGS_NB) $(DFLAGS) casinh.cpp OBJNAME=casinh.dnbo
catanh.dnbo: catanh.cpp
	$(CXX) $(CFLAGS_NB) $(DFLAGS) catanh.cpp OBJNAME=catanh.dnbo

# log1p function targets
log1p.o: log1p.c
	$(CC) $(CFLAGS) $(OFLAGS) log1p.c
log1p.do: log1p.c
	$(CC) $(CFLAGS) $(DFLAGS) log1p.c OBJNAME=log1p.do
log1p.nbo: log1p.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) log1p.c OBJNAME=log1p.nbo
log1p.dnbo: log1p.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) log1p.c OBJNAME=log1p.dnbo

# log1pf function targets
log1pf.o: log1pf.c
	$(CC) $(CFLAGS) $(OFLAGS) log1pf.c
log1pf.do: log1pf.c
	$(CC) $(CFLAGS) $(DFLAGS) log1pf.c OBJNAME=log1pf.do
log1pf.nbo: log1pf.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) log1pf.c OBJNAME=log1pf.nbo
log1pf.dnbo: log1pf.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) log1pf.c OBJNAME=log1pf.dnbo

# log1pl function targets
log1pl.o: log1pl.c
	$(CC) $(CFLAGS) $(OFLAGS) log1pl.c
log1pl.do: log1pl.c
	$(CC) $(CFLAGS) $(DFLAGS) log1pl.c OBJNAME=log1pl.do
log1pl.nbo: log1pl.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) log1pl.c OBJNAME=log1pl.nbo
log1pl.dnbo: log1pl.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) log1pl.c OBJNAME=log1pl.dnbo

# Classification function targets
finite.o: finite.c
	$(CC) $(CFLAGS) $(OFLAGS) finite.c
finite.do: finite.c
	$(CC) $(CFLAGS) $(DFLAGS) finite.c OBJNAME=finite.do
finite.nbo: finite.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) finite.c OBJNAME=finite.nbo
finite.dnbo: finite.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) finite.c OBJNAME=finite.dnbo

isnan.o: isnan.c
	$(CC) $(CFLAGS) $(OFLAGS) isnan.c
isnan.do: isnan.c
	$(CC) $(CFLAGS) $(DFLAGS) isnan.c OBJNAME=isnan.do
isnan.nbo: isnan.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) isnan.c OBJNAME=isnan.nbo
isnan.dnbo: isnan.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) isnan.c OBJNAME=isnan.dnbo

isinf.o: isinf.c
	$(CC) $(CFLAGS) $(OFLAGS) isinf.c
isinf.do: isinf.c
	$(CC) $(CFLAGS) $(DFLAGS) isinf.c OBJNAME=isinf.do
isinf.nbo: isinf.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) isinf.c OBJNAME=isinf.nbo
isinf.dnbo: isinf.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) isinf.c OBJNAME=isinf.dnbo

copysign.o: copysign.c
	$(CC) $(CFLAGS) $(OFLAGS) copysign.c
copysign.do: copysign.c
	$(CC) $(CFLAGS) $(DFLAGS) copysign.c OBJNAME=copysign.do
copysign.nbo: copysign.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) copysign.c OBJNAME=copysign.nbo
copysign.dnbo: copysign.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) copysign.c OBJNAME=copysign.dnbo

# Float variants
finitef.o: finitef.c
	$(CC) $(CFLAGS) $(OFLAGS) finitef.c
finitef.do: finitef.c
	$(CC) $(CFLAGS) $(DFLAGS) finitef.c OBJNAME=finitef.do
finitef.nbo: finitef.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) finitef.c OBJNAME=finitef.nbo
finitef.dnbo: finitef.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) finitef.c OBJNAME=finitef.dnbo

isnanf.o: isnanf.c
	$(CC) $(CFLAGS) $(OFLAGS) isnanf.c
isnanf.do: isnanf.c
	$(CC) $(CFLAGS) $(DFLAGS) isnanf.c OBJNAME=isnanf.do
isnanf.nbo: isnanf.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) isnanf.c OBJNAME=isnanf.nbo
isnanf.dnbo: isnanf.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) isnanf.c OBJNAME=isnanf.dnbo

isinff.o: isinff.c
	$(CC) $(CFLAGS) $(OFLAGS) isinff.c
isinff.do: isinff.c
	$(CC) $(CFLAGS) $(DFLAGS) isinff.c OBJNAME=isinff.do
isinff.nbo: isinff.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) isinff.c OBJNAME=isinff.nbo
isinff.dnbo: isinff.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) isinff.c OBJNAME=isinff.dnbo

copysignf.o: copysignf.c
	$(CC) $(CFLAGS) $(OFLAGS) copysignf.c
copysignf.do: copysignf.c
	$(CC) $(CFLAGS) $(DFLAGS) copysignf.c OBJNAME=copysignf.do
copysignf.nbo: copysignf.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) copysignf.c OBJNAME=copysignf.nbo
copysignf.dnbo: copysignf.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) copysignf.c OBJNAME=copysignf.dnbo

# Long double variants
finitel.o: finitel.c
	$(CC) $(CFLAGS) $(OFLAGS) finitel.c
finitel.do: finitel.c
	$(CC) $(CFLAGS) $(DFLAGS) finitel.c OBJNAME=finitel.do
finitel.nbo: finitel.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) finitel.c OBJNAME=finitel.nbo
finitel.dnbo: finitel.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) finitel.c OBJNAME=finitel.dnbo

isnanl.o: isnanl.c
	$(CC) $(CFLAGS) $(OFLAGS) isnanl.c
isnanl.do: isnanl.c
	$(CC) $(CFLAGS) $(DFLAGS) isnanl.c OBJNAME=isnanl.do
isnanl.nbo: isnanl.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) isnanl.c OBJNAME=isnanl.nbo
isnanl.dnbo: isnanl.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) isnanl.c OBJNAME=isnanl.dnbo

isinfl.o: isinfl.c
	$(CC) $(CFLAGS) $(OFLAGS) isinfl.c
isinfl.do: isinfl.c
	$(CC) $(CFLAGS) $(DFLAGS) isinfl.c OBJNAME=isinfl.do
isinfl.nbo: isinfl.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) isinfl.c OBJNAME=isinfl.nbo
isinfl.dnbo: isinfl.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) isinfl.c OBJNAME=isinfl.dnbo

copysignl.o: copysignl.c
	$(CC) $(CFLAGS) $(OFLAGS) copysignl.c
copysignl.do: copysignl.c
	$(CC) $(CFLAGS) $(DFLAGS) copysignl.c OBJNAME=copysignl.do
copysignl.nbo: copysignl.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) copysignl.c OBJNAME=copysignl.nbo
copysignl.dnbo: copysignl.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) copysignl.c OBJNAME=copysignl.dnbo

# Next batch of math function targets
nextafter.o: nextafter.c
	$(CC) $(CFLAGS) $(OFLAGS) nextafter.c
nextafter.do: nextafter.c
	$(CC) $(CFLAGS) $(DFLAGS) nextafter.c OBJNAME=nextafter.do
nextafter.nbo: nextafter.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) nextafter.c OBJNAME=nextafter.nbo
nextafter.dnbo: nextafter.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) nextafter.c OBJNAME=nextafter.dnbo

scalbn.o: scalbn.c
	$(CC) $(CFLAGS) $(OFLAGS) scalbn.c
scalbn.do: scalbn.c
	$(CC) $(CFLAGS) $(DFLAGS) scalbn.c OBJNAME=scalbn.do
scalbn.nbo: scalbn.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) scalbn.c OBJNAME=scalbn.nbo
scalbn.dnbo: scalbn.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) scalbn.c OBJNAME=scalbn.dnbo

logb.o: logb.c
	$(CC) $(CFLAGS) $(OFLAGS) logb.c
logb.do: logb.c
	$(CC) $(CFLAGS) $(DFLAGS) logb.c OBJNAME=logb.do
logb.nbo: logb.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) logb.c OBJNAME=logb.nbo
logb.dnbo: logb.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) logb.c OBJNAME=logb.dnbo

ilogb.o: ilogb.c
	$(CC) $(CFLAGS) $(OFLAGS) ilogb.c
ilogb.do: ilogb.c
	$(CC) $(CFLAGS) $(DFLAGS) ilogb.c OBJNAME=ilogb.do
ilogb.nbo: ilogb.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) ilogb.c OBJNAME=ilogb.nbo
ilogb.dnbo: ilogb.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) ilogb.c OBJNAME=ilogb.dnbo

# Float variants
nextafterf.o: nextafterf.c
	$(CC) $(CFLAGS) $(OFLAGS) nextafterf.c
nextafterf.do: nextafterf.c
	$(CC) $(CFLAGS) $(DFLAGS) nextafterf.c OBJNAME=nextafterf.do
nextafterf.nbo: nextafterf.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) nextafterf.c OBJNAME=nextafterf.nbo
nextafterf.dnbo: nextafterf.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) nextafterf.c OBJNAME=nextafterf.dnbo

scalbnf.o: scalbnf.c
	$(CC) $(CFLAGS) $(OFLAGS) scalbnf.c
scalbnf.do: scalbnf.c
	$(CC) $(CFLAGS) $(DFLAGS) scalbnf.c OBJNAME=scalbnf.do
scalbnf.nbo: scalbnf.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) scalbnf.c OBJNAME=scalbnf.nbo
scalbnf.dnbo: scalbnf.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) scalbnf.c OBJNAME=scalbnf.dnbo

logbf.o: logbf.c
	$(CC) $(CFLAGS) $(OFLAGS) logbf.c
logbf.do: logbf.c
	$(CC) $(CFLAGS) $(DFLAGS) logbf.c OBJNAME=logbf.do
logbf.nbo: logbf.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) logbf.c OBJNAME=logbf.nbo
logbf.dnbo: logbf.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) logbf.c OBJNAME=logbf.dnbo

ilogbf.o: ilogbf.c
	$(CC) $(CFLAGS) $(OFLAGS) ilogbf.c
ilogbf.do: ilogbf.c
	$(CC) $(CFLAGS) $(DFLAGS) ilogbf.c OBJNAME=ilogbf.do
ilogbf.nbo: ilogbf.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) ilogbf.c OBJNAME=ilogbf.nbo
ilogbf.dnbo: ilogbf.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) ilogbf.c OBJNAME=ilogbf.dnbo

# Long double variants
nextafterl.o: nextafterl.c
	$(CC) $(CFLAGS) $(OFLAGS) nextafterl.c
nextafterl.do: nextafterl.c
	$(CC) $(CFLAGS) $(DFLAGS) nextafterl.c OBJNAME=nextafterl.do
nextafterl.nbo: nextafterl.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) nextafterl.c OBJNAME=nextafterl.nbo
nextafterl.dnbo: nextafterl.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) nextafterl.c OBJNAME=nextafterl.dnbo

scalbnl.o: scalbnl.c
	$(CC) $(CFLAGS) $(OFLAGS) scalbnl.c
scalbnl.do: scalbnl.c
	$(CC) $(CFLAGS) $(DFLAGS) scalbnl.c OBJNAME=scalbnl.do
scalbnl.nbo: scalbnl.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) scalbnl.c OBJNAME=scalbnl.nbo
scalbnl.dnbo: scalbnl.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) scalbnl.c OBJNAME=scalbnl.dnbo

logbl.o: logbl.c
	$(CC) $(CFLAGS) $(OFLAGS) logbl.c
logbl.do: logbl.c
	$(CC) $(CFLAGS) $(DFLAGS) logbl.c OBJNAME=logbl.do
logbl.nbo: logbl.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) logbl.c OBJNAME=logbl.nbo
logbl.dnbo: logbl.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) logbl.c OBJNAME=logbl.dnbo

ilogbl.o: ilogbl.c
	$(CC) $(CFLAGS) $(OFLAGS) ilogbl.c
ilogbl.do: ilogbl.c
	$(CC) $(CFLAGS) $(DFLAGS) ilogbl.c OBJNAME=ilogbl.do
ilogbl.nbo: ilogbl.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) ilogbl.c OBJNAME=ilogbl.nbo
ilogbl.dnbo: ilogbl.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) ilogbl.c OBJNAME=ilogbl.dnbo

# Additional fdlibm function targets
fabs.o: fabs.c
	$(CC) $(CFLAGS) $(OFLAGS) fabs.c
fabs.do: fabs.c
	$(CC) $(CFLAGS) $(DFLAGS) fabs.c OBJNAME=fabs.do
fabs.nbo: fabs.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) fabs.c OBJNAME=fabs.nbo
fabs.dnbo: fabs.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) fabs.c OBJNAME=fabs.dnbo

fmod.o: fmod.c
	$(CC) $(CFLAGS) $(OFLAGS) fmod.c
fmod.do: fmod.c
	$(CC) $(CFLAGS) $(DFLAGS) fmod.c OBJNAME=fmod.do
fmod.nbo: fmod.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) fmod.c OBJNAME=fmod.nbo
fmod.dnbo: fmod.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) fmod.c OBJNAME=fmod.dnbo

modf.o: modf.c
	$(CC) $(CFLAGS) $(OFLAGS) modf.c
modf.do: modf.c
	$(CC) $(CFLAGS) $(DFLAGS) modf.c OBJNAME=modf.do
modf.nbo: modf.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) modf.c OBJNAME=modf.nbo
modf.dnbo: modf.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) modf.c OBJNAME=modf.dnbo

remainder.o: remainder.c
	$(CC) $(CFLAGS) $(OFLAGS) remainder.c
remainder.do: remainder.c
	$(CC) $(CFLAGS) $(DFLAGS) remainder.c OBJNAME=remainder.do
remainder.nbo: remainder.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) remainder.c OBJNAME=remainder.nbo
remainder.dnbo: remainder.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) remainder.c OBJNAME=remainder.dnbo

ceil.o: ceil.c
	$(CC) $(CFLAGS) $(OFLAGS) ceil.c
ceil.do: ceil.c
	$(CC) $(CFLAGS) $(DFLAGS) ceil.c OBJNAME=ceil.do
ceil.nbo: ceil.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) ceil.c OBJNAME=ceil.nbo
ceil.dnbo: ceil.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) ceil.c OBJNAME=ceil.dnbo

floor.o: floor.c
	$(CC) $(CFLAGS) $(OFLAGS) floor.c
floor.do: floor.c
	$(CC) $(CFLAGS) $(DFLAGS) floor.c OBJNAME=floor.do
floor.nbo: floor.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) floor.c OBJNAME=floor.nbo
floor.dnbo: floor.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) floor.c OBJNAME=floor.dnbo

erf.o: erf.c
	$(CC) $(CFLAGS) $(OFLAGS) erf.c
erf.do: erf.c
	$(CC) $(CFLAGS) $(DFLAGS) erf.c OBJNAME=erf.do
erf.nbo: erf.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) erf.c OBJNAME=erf.nbo
erf.dnbo: erf.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) erf.c OBJNAME=erf.dnbo

erfc.o: erfc.c
	$(CC) $(CFLAGS) $(OFLAGS) erfc.c
erfc.do: erfc.c
	$(CC) $(CFLAGS) $(DFLAGS) erfc.c OBJNAME=erfc.do
erfc.nbo: erfc.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) erfc.c OBJNAME=erfc.nbo
erfc.dnbo: erfc.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) erfc.c OBJNAME=erfc.dnbo

gamma.o: gamma.c
	$(CC) $(CFLAGS) $(OFLAGS) gamma.c
gamma.do: gamma.c
	$(CC) $(CFLAGS) $(DFLAGS) gamma.c OBJNAME=gamma.do
gamma.nbo: gamma.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) gamma.c OBJNAME=gamma.nbo
gamma.dnbo: gamma.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) gamma.c OBJNAME=gamma.dnbo

lgamma.o: lgamma.c
	$(CC) $(CFLAGS) $(OFLAGS) lgamma.c
lgamma.do: lgamma.c
	$(CC) $(CFLAGS) $(DFLAGS) lgamma.c OBJNAME=lgamma.do
lgamma.nbo: lgamma.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) lgamma.c OBJNAME=lgamma.nbo
lgamma.dnbo: lgamma.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) lgamma.c OBJNAME=lgamma.dnbo

gamma_r.o: gamma_r.c
	$(CC) $(CFLAGS) $(OFLAGS) gamma_r.c
gamma_r.do: gamma_r.c
	$(CC) $(CFLAGS) $(DFLAGS) gamma_r.c OBJNAME=gamma_r.do
gamma_r.nbo: gamma_r.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) gamma_r.c OBJNAME=gamma_r.nbo
gamma_r.dnbo: gamma_r.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) gamma_r.c OBJNAME=gamma_r.dnbo

lgamma_r.o: lgamma_r.c
	$(CC) $(CFLAGS) $(OFLAGS) lgamma_r.c
lgamma_r.do: lgamma_r.c
	$(CC) $(CFLAGS) $(DFLAGS) lgamma_r.c OBJNAME=lgamma_r.do
lgamma_r.nbo: lgamma_r.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) lgamma_r.c OBJNAME=lgamma_r.nbo
lgamma_r.dnbo: lgamma_r.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) lgamma_r.c OBJNAME=lgamma_r.dnbo

j0.o: j0.c
	$(CC) $(CFLAGS) $(OFLAGS) j0.c
j0.do: j0.c
	$(CC) $(CFLAGS) $(DFLAGS) j0.c OBJNAME=j0.do
j0.nbo: j0.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) j0.c OBJNAME=j0.nbo
j0.dnbo: j0.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) j0.c OBJNAME=j0.dnbo

sin.o: sin.c
	$(CC) $(CFLAGS) $(OFLAGS) sin.c
sin.do: sin.c
	$(CC) $(CFLAGS) $(DFLAGS) sin.c OBJNAME=sin.do
sin.nbo: sin.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) sin.c OBJNAME=sin.nbo
sin.dnbo: sin.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) sin.c OBJNAME=sin.dnbo

signgam.o: signgam.c
	$(CC) $(CFLAGS) $(OFLAGS) signgam.c
signgam.do: signgam.c
	$(CC) $(CFLAGS) $(DFLAGS) signgam.c OBJNAME=signgam.do
signgam.nbo: signgam.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) signgam.c OBJNAME=signgam.nbo
signgam.dnbo: signgam.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) signgam.c OBJNAME=signgam.dnbo

lib_version.o: lib_version.c
	$(CC) $(CFLAGS) $(OFLAGS) lib_version.c
lib_version.do: lib_version.c
	$(CC) $(CFLAGS) $(DFLAGS) lib_version.c OBJNAME=lib_version.do
lib_version.nbo: lib_version.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) lib_version.c OBJNAME=lib_version.nbo
lib_version.dnbo: lib_version.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) lib_version.c OBJNAME=lib_version.dnbo

# Additional trigonometric function targets
cos.o: cos.c
	$(CC) $(CFLAGS) $(OFLAGS) cos.c
cos.do: cos.c
	$(CC) $(CFLAGS) $(DFLAGS) cos.c OBJNAME=cos.do
cos.nbo: cos.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) cos.c OBJNAME=cos.nbo
cos.dnbo: cos.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) cos.c OBJNAME=cos.dnbo

tan.o: tan.c
	$(CC) $(CFLAGS) $(OFLAGS) tan.c
tan.do: tan.c
	$(CC) $(CFLAGS) $(DFLAGS) tan.c OBJNAME=tan.do
tan.nbo: tan.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) tan.c OBJNAME=tan.nbo
tan.dnbo: tan.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) tan.c OBJNAME=tan.dnbo

atan.o: atan.c
	$(CC) $(CFLAGS) $(OFLAGS) atan.c
atan.do: atan.c
	$(CC) $(CFLAGS) $(DFLAGS) atan.c OBJNAME=atan.do
atan.nbo: atan.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) atan.c OBJNAME=atan.nbo
atan.dnbo: atan.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) atan.c OBJNAME=atan.dnbo

# Additional math function targets
atan2.o: atan2.c
	$(CC) $(CFLAGS) $(OFLAGS) atan2.c
atan2.do: atan2.c
	$(CC) $(CFLAGS) $(DFLAGS) atan2.c OBJNAME=atan2.do
atan2.nbo: atan2.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) atan2.c OBJNAME=atan2.nbo
atan2.dnbo: atan2.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) atan2.c OBJNAME=atan2.dnbo

log.o: log.c
	$(CC) $(CFLAGS) $(OFLAGS) log.c
log.do: log.c
	$(CC) $(CFLAGS) $(DFLAGS) log.c OBJNAME=log.do
log.nbo: log.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) log.c OBJNAME=log.nbo
log.dnbo: log.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) log.c OBJNAME=log.dnbo

log10.o: log10.c
	$(CC) $(CFLAGS) $(OFLAGS) log10.c
log10.do: log10.c
	$(CC) $(CFLAGS) $(DFLAGS) log10.c OBJNAME=log10.do
log10.nbo: log10.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) log10.c OBJNAME=log10.nbo
log10.dnbo: log10.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) log10.c OBJNAME=log10.dnbo

sqrt.o: sqrt.c
	$(CC) $(CFLAGS) $(OFLAGS) sqrt.c
sqrt.do: sqrt.c
	$(CC) $(CFLAGS) $(DFLAGS) sqrt.c OBJNAME=sqrt.do
sqrt.nbo: sqrt.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) sqrt.c OBJNAME=sqrt.nbo
sqrt.dnbo: sqrt.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) sqrt.c OBJNAME=sqrt.dnbo

# Additional power and hyperbolic function targets
pow.o: pow.c
	$(CC) $(CFLAGS) $(OFLAGS) pow.c
pow.do: pow.c
	$(CC) $(CFLAGS) $(DFLAGS) pow.c OBJNAME=pow.do
pow.nbo: pow.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) pow.c OBJNAME=pow.nbo
pow.dnbo: pow.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) pow.c OBJNAME=pow.dnbo

cosh.o: cosh.c
	$(CC) $(CFLAGS) $(OFLAGS) cosh.c
cosh.do: cosh.c
	$(CC) $(CFLAGS) $(DFLAGS) cosh.c OBJNAME=cosh.do
cosh.nbo: cosh.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) cosh.c OBJNAME=cosh.nbo
cosh.dnbo: cosh.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) cosh.c OBJNAME=cosh.dnbo

sinh.o: sinh.c
	$(CC) $(CFLAGS) $(OFLAGS) sinh.c
sinh.do: sinh.c
	$(CC) $(CFLAGS) $(DFLAGS) sinh.c OBJNAME=sinh.do
sinh.nbo: sinh.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) sinh.c OBJNAME=sinh.nbo
sinh.dnbo: sinh.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) sinh.c OBJNAME=sinh.dnbo

tanh.o: tanh.c
	$(CC) $(CFLAGS) $(OFLAGS) tanh.c
tanh.do: tanh.c
	$(CC) $(CFLAGS) $(DFLAGS) tanh.c OBJNAME=tanh.do
tanh.nbo: tanh.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) tanh.c OBJNAME=tanh.nbo
tanh.dnbo: tanh.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) tanh.c OBJNAME=tanh.dnbo

asin.o: asin.c
	$(CC) $(CFLAGS) $(OFLAGS) asin.c
asin.do: asin.c
	$(CC) $(CFLAGS) $(DFLAGS) asin.c OBJNAME=asin.do
asin.nbo: asin.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) asin.c OBJNAME=asin.nbo
asin.dnbo: asin.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) asin.c OBJNAME=asin.dnbo

# Additional inverse trigonometric and exponential function targets
acos.o: acos.c
	$(CC) $(CFLAGS) $(OFLAGS) acos.c
acos.do: acos.c
	$(CC) $(CFLAGS) $(DFLAGS) acos.c OBJNAME=acos.do
acos.nbo: acos.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) acos.c OBJNAME=acos.nbo
acos.dnbo: acos.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) acos.c OBJNAME=acos.dnbo

exp.o: exp.c
	$(CC) $(CFLAGS) $(OFLAGS) exp.c
exp.do: exp.c
	$(CC) $(CFLAGS) $(DFLAGS) exp.c OBJNAME=exp.do
exp.nbo: exp.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) exp.c OBJNAME=exp.nbo
exp.dnbo: exp.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) exp.c OBJNAME=exp.dnbo

frexp.o: frexp.c
	$(CC) $(CFLAGS) $(OFLAGS) frexp.c
frexp.do: frexp.c
	$(CC) $(CFLAGS) $(DFLAGS) frexp.c OBJNAME=frexp.do
frexp.nbo: frexp.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) frexp.c OBJNAME=frexp.nbo
frexp.dnbo: frexp.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) frexp.c OBJNAME=frexp.dnbo

ldexp.o: ldexp.c
	$(CC) $(CFLAGS) $(OFLAGS) ldexp.c
ldexp.do: ldexp.c
	$(CC) $(CFLAGS) $(DFLAGS) ldexp.c OBJNAME=ldexp.do
ldexp.nbo: ldexp.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) ldexp.c OBJNAME=ldexp.nbo
ldexp.dnbo: ldexp.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) ldexp.c OBJNAME=ldexp.dnbo

j1.o: j1.c
	$(CC) $(CFLAGS) $(OFLAGS) j1.c
j1.do: j1.c
	$(CC) $(CFLAGS) $(DFLAGS) j1.c OBJNAME=j1.do
j1.nbo: j1.c
	$(CC) $(CFLAGS_NB) $(OFLAGS) j1.c OBJNAME=j1.nbo
j1.dnbo: j1.c
	$(CC) $(CFLAGS_NB) $(DFLAGS) j1.c OBJNAME=j1.dnbo


# Installation
install: all
	$(CP) $(LIBRARIES) $(DEST)
	$(CP) $(DEBUG_LIBRARIES) $(DEST)
	$(CP) $(NB_LIBRARIES) $(DEST)
	$(CP) $(NBD_LIBRARIES) $(DEST)

# Cleanup
clean:
	$(RM) $(ALL_OBJS) $(DOBJS) $(NBOBJS) $(DNBOBJS)
	$(RM) $(LIBRARIES) $(DEBUG_LIBRARIES) $(NB_LIBRARIES) $(NBD_LIBRARIES)

# Dependencies
depend:
	$(CC) -M $(CFLAGS) *.c > depend
